import React, { useContext, useEffect, useState } from 'react';
import { StatusBar } from 'react-native';
import { withNavigation, withNavigationFocus } from 'react-navigation';
import Discussions from '../components/discussions/Discussions';
import Sort from '../components/discussions/Sort';
import {
  Container,
  Left,
  Text,
  Card,
  CardItem,
  View,
  Button
} from 'native-base';
import { Image } from 'react-native';
import { Store } from '../context/';
import { getDiscussions, getStats } from '../context/actions/discussionActions';
import { isAuthed } from '../context/actions/authActions';
import {
  getSubtopics,
  getFavoriteSubtopics
} from '../context/actions/subtopicActions';
import { getData } from '../utils/AsyncStorage';
import { isEmpty } from '../utils/utility';
import { theme } from '../common/theme';
import Stats from '../components/discussions/Stats';
import { ScrollView } from 'react-native-gesture-handler';

import PushNotification from 'react-native-push-notification';

// this home is referring to TopDiscussions component ONLY

const Home = props => {
  const { state, dispatch } = useContext(Store);
  const [stats, setStats] = useState(null);

  useEffect(
    () => {
      getStats(setStats);
    },
    () => getStats()
  );

  useEffect(
    () => {
      isAuthed(dispatch);
    },
    () => isAuthed()
  );

  // gather top discussions
  useEffect(() => {
    getDiscussions(state.sortBy, dispatch);
  }, [state.sortBy]);

  // gather all subtopics
  useEffect(
    () => {
      getSubtopics(dispatch);
    },
    () => getSubtopics
  );

  // gather favorited subs
  useEffect(
    () => {
      getUserSubs(dispatch);
    },
    () => getUserSubs()
  );

  // gather favorite subtopics helper function
  const getUserSubs = async dispatch => {
    let userId = await getData('accessToken');
    if (userId === null) {
      return null;
    } else {
      userId = userId.id;
      await getFavoriteSubtopics(dispatch, userId);
    }
  };

  const localSend = () => {
    PushNotification.localNotification({
      /* Android Only Properties */
      id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      ticker: 'My Notification Ticker', // (optional)
      autoCancel: true, // (optional) default: true
      largeIcon: 'ic_launcher', // (optional) default: "ic_launcher"
      smallIcon: 'ic_notification', // (optional) default: "ic_notification" with fallback for "ic_launcher"
      bigText: 'My big text that will be shown when notification is expanded', // (optional) default: "message" prop
      subText: 'This is a subText', // (optional) default: none
      color: 'red', // (optional) default: system default
      vibrate: true, // (optional) default: true
      vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
      tag: 'some_tag', // (optional) add tag to message
      group: 'group', // (optional) add group to message
      ongoing: false, // (optional) set whether this is an "ongoing" notification
      priority: 'high', // (optional) set notification priority, default: high
      visibility: 'private', // (optional) set notification visibility, default: private
      importance: 'high', // (optional) set notification importance, default: high

      title: 'Scheduled Notification', // (optional)
      message: 'My Notification Message', // (required)
      playSound: true, // (optional) default: true
      soundName: 'default'
    });
  };

  return (
    <Container style={{ backgroundColor: theme.colors.offWhite, padding: 5 }}>
      <Button title="PUSH" onPress={() => localSend()}>
        <Text>PUSH</Text>
      </Button>
      <ScrollView>
        <StatusBar backgroundColor="white" barStyle="dark-content" />

        <Card>
          <CardItem header>
            <Text>Welcome to neral </Text>
            <Image
              style={{
                justifyContent: 'center',
                width: 30,
                height: 30,
                resizeMode: 'contain'
              }}
              source={require('../assets/LSLogo1.png')}
            />
            <Text> connect and inspire</Text>
          </CardItem>
          {stats &&
            stats.map((stat, i) => {
              return <Stats key={i} stats={stat} />;
            })}
        </Card>
        <Sort />
        <Text style={{ marginLeft: 15, marginBottom: 10 }}>
          See What's Trending
        </Text>
        <Discussions
          loading={state.top_discussions_loading}
          discussions={state.top_discussions}
        />
      </ScrollView>
    </Container>
  );
};

export default Home;
